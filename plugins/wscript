#! /usr/bin/env python
# encoding: utf-8

import os, tarfile #, functools

from waflib import Logs

def get_plugins(path):
	#list all subdirectories
	folders=path.ant_glob('*',dir=True,src=False)
	#function that remove the path 
	def basename(node): return node.path_from(node.parent)
	return map(basename,folders)

def configure (conf):
    
    	##################################################################################################
	# Enable AFFINE plugin if option --with-affine-extended is enable
	if (conf.options.WITH_AFFINE_EXTEND):
		conf.options.WITH_AFFINE =True
  
	#store the list of plugins in the environment
	#conf.env['plugins']=get_plugins(conf.path)
	plugins=get_plugins(conf.path)
		
	#call "configure" of each plugin
	conf.recurse(plugins)
		
def options (opt):
	#call "options" for each plugin
	plugins=get_plugins(opt.path)
	opt.recurse(plugins)

def build (bld):
	#call "build" for each plugin
	plugins=get_plugins(bld.path)
	bld.recurse(plugins)

#import importlib # see add_src(..)

# Add sources of each plugin
#def add_src(bld):
#	for plugin in bld.env['plugins']
#		module=importlib.import_module(plugin)
#		module.add_src(bld)

