#! /usr/bin/env python
# encoding: utf-8

import ibexutils
import os, sys
from waflib import Logs

######################
###### options #######
######################
def options (opt):
	grp_name = "Profil/Bias options (when --interval-lib=bias is used)"
	grp = opt.add_option_group (grp_name)
	grp.add_option ("--bias-dir", action="store", type="string", dest="BIAS_PATH", default = "", help = "location of the Profil/Bias lib and include directories")

######################
##### configure ######
######################
def configure (conf):
	if conf.env["INTERVAL_LIB"]:
		conf.fatal ("Trying to configure a second library for interval arithmetic")
	conf.env["INTERVAL_LIB"] = "BIAS"

	bias_dir = conf.options.BIAS_PATH

	if bias_dir:
		conf.msg ("Using library bias from", bias_dir)
		bias_include = os.path.join (bias_dir, "include")
		bias_lib = os.path.join (bias_dir, "lib")
		conf.env.append_unique ("INCLUDES_IBEX_DEPS", bias_include)
		conf.env.append_unique ("LIBPATH_IBEX_DEPS", bias_lib)
	else:
		bias_include = ""
		bias_lib = ""

	# Looking for Bias header and library (in fact libraries Profil, Bias and lr)
	conf.check_cxx (header_name = "BIAS/BiasF.h", includes = bias_include,
		use = [ "IBEX", "ITV_LIB" ], uselib_store = "ITV_LIB")
	biaslibs = ["Profil", "Bias", "lr"]
	conf.check_cxx (lib = biaslibs, libpath = bias_lib,
		use = [ "IBEX", "ITV_LIB" ], uselib_store = "ITV_LIB")

	# Define needed variables
	cpp_wrapper_node = conf.path.make_node ("wrapper.cpp")
	h_wrapper_node = conf.path.make_node ("wrapper.h")
	conf.env.IBEX_INTERVAL_LIB_WRAPPER_CPP = cpp_wrapper_node.read()
	conf.env.IBEX_INTERVAL_LIB_WRAPPER_H = h_wrapper_node.read()
	conf.env.IBEX_INTERVAL_LIB_INCLUDES = [ "Interval.h" ]
	conf.env.IBEX_INTERVAL_LIB_EXTRA_DEFINES = "/* */"
	conf.env.IBEX_INTERVAL_LIB_NEG_INFINITY = "BiasNegInf"
	conf.env.IBEX_INTERVAL_LIB_POS_INFINITY = "BiasPosInf"
	conf.env.IBEX_INTERVAL_LIB_ITV_EXTRA = "/* */"
	conf.env.IBEX_INTERVAL_LIB_ITV_WRAP = "Interval(const INTERVAL& x);"
	conf.env.IBEX_INTERVAL_LIB_ITV_ASSIGN = "Interval& operator=(const INTERVAL& x);"
	conf.env.IBEX_INTERVAL_LIB_ITV_DEF = "INTERVAL itv;"
	conf.env.IBEX_INTERVAL_LIB_DISTANCE = "Distance(x1.itv,x2.itv);"
