################################################################################
# Options
################################################################################
set (FILIB_DIR "" CACHE PATH "Path to the Filib lib and include directories")

################################################################################
# May be needed to install missing dependencies
################################################################################
include (ExternalProject)
include (IbexUtils)

# Looking for interval/interval.hpp, result is written in FILIB_INCDIR
find_header_custom (FILIB "interval/interval.hpp" PATHS "${FILIB_DIR}")
# Looking for prim library, result is written in FILIB_LIB
find_library_custom (FILIB "prim" PATHS "${FILIB_DIR}")

# With Filib, we add "-Wno-deprecated" to remove lots of warnings generated by
# a function definition in interval.icc
CHECK_CXX_COMPILER_FLAG ("-Wno-deprecated" COMPILER_SUPPORTS_WNO_DEPRECATED)
if (COMPILER_SUPPORTS_WNO_DEPRECATED)
  list (APPEND FILIB_FLAGS -Wno-deprecated)
endif()

# With Filib, we need to add flags "-frounding-math" and "-ffloat-store"
# It is necessary to use filib, to avoid problem with x80 processor.
# This option prevents undesirable excess precision on machines such as the
# 68000 where the floating registers (of the 68881) keep more precision than a
# "double" is supposed to have. Similarly for the x86 architecture. For most
# programs, the excess precision does only good, but a few programs rely on the
# precise definition of IEEE floating point. Use -ffloat-store for such
# programs, after modifying them to store all pertinent intermediate
# computations into variables.
foreach (flag "-frounding-math" "-ffloat-store")
  CHECK_CXX_COMPILER_FLAG (${flag} COMPILER_SUPPORTS_${flag})
  if (COMPILER_SUPPORTS_${flag})
    list (APPEND FILIB_FLAGS ${flag})
  else ()
    message (WARNING "The compiler does not the flag ${flag} needed by Filib. "
                     "You may get incorrect/inconsistent results.")
  endif()
endforeach ()

if (FILIB_FLAGS)
  set (filib_compile_option COMPILE_OPTIONS ${FILIB_FLAGS})
endif ()

if (FILIB_INCDIR AND FILIB_LIB)
  create_target_import_and_export (prim ${FILIB_LIB} ${filib_compile_option}
                                        NAMESPACE Ibex::
                                        TARGET_NAME filib
                                        INCLUDE_DIRECTORIES ${FILIB_INCDIR})
else ()
  message (STATUS "Will install and use library Filib from 3rd/ subdirectory")
  set (FILIB_PATCH "${CMAKE_CURRENT_SOURCE_DIR}/3rd/filibsrc-3.0.2.2.all.all.patch")
  ExternalProject_Add (libfilib_3rd
                        PREFIX filib-3.0.2.2
                        URL ${CMAKE_CURRENT_SOURCE_DIR}/3rd/filibsrc-3.0.2.2.tar.gz
                        PATCH_COMMAND patch -p1 -i ${FILIB_PATCH}
                        BUILD_IN_SOURCE 1
                        CONFIGURE_COMMAND ./configure --prefix=<INSTALL_DIR>
                        LOG_DOWNLOAD 1
                        LOG_CONFIGURE 1
                        LOG_BUILD 1
                        LOG_INSTALL 1
                      )
  ExternalProject_Get_Property (libfilib_3rd INSTALL_DIR)
  set (FILIB_LIBDIR "${INSTALL_DIR}/lib")
  set (FILIB_INCDIR "${INSTALL_DIR}/include")

  # absolute path to the library
  lib_get_abspath_from_name (FILIB_LIB ${FILIB_LIBDIR} prim)

  # this directory needs to exist during generation step to avoid CMake errors
  file (MAKE_DIRECTORY "${FILIB_INCDIR}")

  # install headers
  install (DIRECTORY ${FILIB_INCDIR}/ COMPONENT devtools
                                    DESTINATION ${CMAKE_INSTALL_INCLUDEDIR_3RD})

  #
  set (_incdir $<BUILD_INTERFACE:${FILIB_INCDIR}>$<INSTALL_INTERFACE:$<INSTALL_PREFIX>/${CMAKE_INSTALL_INCLUDEDIR_3RD}>)
  create_target_import_and_export (prim ${FILIB_LIB} ${filib_compile_option}
                                        NAMESPACE Ibex::
                                        TARGET_NAME filib
                                        INSTALL
                                        INCLUDE_DIRECTORIES ${_incdir}
                                        COMPONENT devtools
                                        DEPENDS libfilib_3rd)
  unset (INSTALL_DIR)
endif ()
