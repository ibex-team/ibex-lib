--- soplex-4.0.2/CMakeLists.txt	2020-12-10 16:07:11.143036971 +0100
+++ soplex-4.0.2/CMakeLists.txt 2019-06-28 15:47:59.000000000 +0200
@@ -19,8 +19,8 @@
 set(CPACK_PACKAGE_VENDOR "Zuse Institute Berlin")
 include(CPack)

-option(ZLIB "Use ZLIB" ON)
-option(GMP "Use GMP" ON)
+option(ZLIB "Use ZLIB" OFF)
+option(GMP "Use GMP" OFF)
 option(STATIC_GMP "Prefer static GMP lib" OFF)
 option(CMAKE_WINDOWS_EXPORT_ALL_SYMBOLS "Export all symbols into the DLL" ON)
 option(MT "use static runtime libraries for Visual Studio compiler" OFF)
@@ -49,10 +49,6 @@
 # use C++11 standard
 set(CMAKE_CXX_STANDARD 11)

-# set function visibility default to hidden
-set(CMAKE_CXX_VISIBILITY_PRESET hidden)
-set(CMAKE_VISIBILITY_INLINES_HIDDEN 1)
-
 # create a target for updating the current git hash
 file(WRITE ${CMAKE_BINARY_DIR}/soplex_update_githash.cmake "
 find_program(GIT git)
--- soplex-4.0.2/src/CMakeLists.txt	2019-06-28 15:48:00.000000000 +0200
+++ soplex-4.0.2/src/CMakeLists.txt	2020-12-10 16:21:43.523863588 +0100
@@ -1,5 +1,3 @@
-include_directories(${CMAKE_CURRENT_SOURCE_DIR})
-
 set(sources
     soplex/changesoplex.cpp
     soplex/clufactor.cpp
@@ -158,81 +156,19 @@
     soplex/vector.h
     soplex/wallclocktimer.h)
 
-    # create soplex library with pic
-    add_library(libsoplex-pic STATIC ${sources})
-    set_target_properties(libsoplex-pic PROPERTIES
-    POSITION_INDEPENDENT_CODE on
-    VERSION ${SOPLEX_VERSION_MAJOR}.${SOPLEX_VERSION_MINOR}.${SOPLEX_VERSION_PATCH}.${SOPLEX_VERSION_SUB}
-    SOVERSION ${SOPLEX_VERSION_MAJOR}.${SOPLEX_VERSION_MINOR})
-add_dependencies(libsoplex-pic soplex_update_githash)
-target_link_libraries(libsoplex-pic ${libs})
-
-# create soplex library without pic
-add_library(libsoplex STATIC ${sources})
-set_target_properties(libsoplex PROPERTIES
-    VERSION ${SOPLEX_VERSION_MAJOR}.${SOPLEX_VERSION_MINOR}.${SOPLEX_VERSION_PATCH}.${SOPLEX_VERSION_SUB}
-    SOVERSION ${SOPLEX_VERSION_MAJOR}.${SOPLEX_VERSION_MINOR})
-add_dependencies(libsoplex soplex_update_githash)
-target_link_libraries(libsoplex ${libs})
-
-# create soplex binary using library without pic
-add_executable(soplex soplexmain.cpp)
-target_link_libraries(soplex libsoplex)
-
-if(CMAKE_BUILD_TYPE EQUAL "Debug")
-    find_package(Sanitizers)
-    add_sanitizers(soplex)
-endif()
-
-add_executable(example EXCLUDE_FROM_ALL example.cpp)
-target_link_libraries(example libsoplex)
-
-# set the install rpath to the installed destination
-set_target_properties(soplex PROPERTIES INSTALL_RPATH "${CMAKE_INSTALL_PREFIX}/lib")
-# on UNIX system the 'lib' prefix is automatically added
-set_target_properties(libsoplex PROPERTIES
-    OUTPUT_NAME "soplex"
-    MACOSX_RPATH "${CMAKE_INSTALL_PREFIX}/lib")
-set_target_properties(libsoplex-pic PROPERTIES
-    OUTPUT_NAME "soplex-pic"
-    MACOSX_RPATH "${CMAKE_INSTALL_PREFIX}/lib")
-
-# install the header files of soplex
-install(FILES ${headers} DESTINATION include/soplex)
-install(FILES soplex.h DESTINATION include)
-
-# install the binary and the library to appropriate lcoations and add them to an export group
-install(TARGETS soplex libsoplex libsoplex-pic EXPORT soplex-targets
-        LIBRARY DESTINATION lib
-        ARCHIVE DESTINATION lib
-        RUNTIME DESTINATION bin
-        INCLUDES DESTINATION include)
-
-# Add library targets to the build-tree export set
-export(TARGETS libsoplex libsoplex-pic
-  FILE "${CMAKE_BINARY_DIR}/soplex-targets.cmake")
-
-#configure the config file for the build tree
-set(CONF_INCLUDE_DIRS "${PROJECT_SOURCE_DIR}/src")
-configure_file(${PROJECT_SOURCE_DIR}/soplex-config.cmake.in
-  "${CMAKE_BINARY_DIR}/soplex-config.cmake" @ONLY)
-
-include(CMakePackageConfigHelpers)
-write_basic_package_version_file(
-${CMAKE_BINARY_DIR}/soplex-config-version.cmake
-    VERSION ${SOPLEX_VERSION_MAJOR}.${SOPLEX_VERSION_MINOR}.${SOPLEX_VERSION_PATCH}
-    COMPATIBILITY SameMajorVersion
-    )
-
-
-#configure the config file for the install
-set(CONF_INCLUDE_DIRS "\${CMAKE_CURRENT_LIST_DIR}/../../../include")
-configure_file(${PROJECT_SOURCE_DIR}/soplex-config.cmake.in
-  "${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/soplex-config.cmake" @ONLY)
-
-# install the targets of the soplex export group and the config file so that other projects
-# can link easily against soplex
-install(EXPORT soplex-targets FILE soplex-targets.cmake DESTINATION lib/cmake/soplex)
-install(FILES "${PROJECT_BINARY_DIR}${CMAKE_FILES_DIRECTORY}/soplex-config.cmake"
-	           ${CMAKE_BINARY_DIR}/soplex-config-version.cmake
-	     DESTINATION lib/cmake/soplex)
+# create soplex library
+add_library (soplex ${sources})
+set_target_properties (soplex PROPERTIES
+  VERSION ${SOPLEX_VERSION_MAJOR}.${SOPLEX_VERSION_MINOR}.${SOPLEX_VERSION_PATCH}.${SOPLEX_VERSION_SUB}
+  SOVERSION ${SOPLEX_VERSION_MAJOR}.${SOPLEX_VERSION_MINOR})
+add_dependencies (soplex soplex_update_githash)
+target_include_directories (soplex PUBLIC
+  "$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}>"
+  "$<INSTALL_INTERFACE:${CMAKE_INSTALL_INCLUDEDIR}/soplex>"
+                              "$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}>")
+
+install (FILES soplex.h DESTINATION ${CMAKE_INSTALL_INCLUDEDIR})
+install (FILES ${headers} DESTINATION ${CMAKE_INSTALL_INCLUDEDIR}/soplex)
+install (TARGETS soplex EXPORT ibexExport
+                        DESTINATION ${CMAKE_INSTALL_LIBDIR}
+                        COMPONENT devtools)
